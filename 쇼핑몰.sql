ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;
-- 옛날 버전으로 ID 생성하게끔

CREATE USER kh_shop IDENTIFIED BY 1234;
-- 아이디와 비번 생성

GRANT CREATE SESSION TO kh_shop;
-- 아이디에다가 데이터 베이스 접속권한 주기

GRANT CONNECT, RESOURCE TO kh_shop;
-- 아이디에다가 리소스와 커넥 전부다해보리기

ALTER USER kh_shop DEFAULT TABLESPACE SYSTEM QUOTA UNLIMITED ON USERS;
-------------------------------------------------
-- 이제부터 KH, 숍으로 접속

-- 카테고리 테이블 생성
CREATE TABLE CATEGORIES(
 CATEGORY_ID NUMBER PRIMARY KEY,
 CATEGORY_NAME VARCHAR2(100) UNIQUE
);

-- 카테고리 컬럼에 주석달기
COMMENT ON COLUMN CATEGORIES.CATEGORY_ID IS '카테고리ID';
COMMENT ON COLUMN CATEGORIES.CATEGORY_NAME IS '카테고리명';


-- 상품 테이블 생성
CREATE TABLE PRODUCTS (
 PRODUCTS_ID NUMBER PRIMARY KEY,
 PRODUCTS_NAME VARCHAR2(100) NOT NULL,
 CATEGORY NUMBER REFERENCES CATEGORIES, 
 PRICE NUMBER DEFAULT 0,
 STOCK_QUANTITY NUMBER DEFAULT 0
);

-- 상품 테이블 컬럼에 주석달기
COMMENT ON COLUMN PRODUCTS.PRODUCTS_ID IS '상품코드';
COMMENT ON COLUMN PRODUCTS.PRODUCTS_NAME IS '상품이름';
COMMENT ON COLUMN PRODUCTS.CATEGORY IS '카테고리';
COMMENT ON COLUMN PRODUCTS.PRICE IS '가격';
COMMENT ON COLUMN PRODUCTS.STOCK_QUANTITY IS '재고량';

-- 고객테이블 생성
CREATE TABLE CUSTOMERS(
 CUSTOMER_ID NUMBER PRIMARY KEY,
 NAME VARCHAR2(20) NOT NULL ,
 GENDER CHAR(3) CHECK(GENDER IN ('남','여') ),
 ADDRESS VARCHAR2(100),
 PHONE VARCHAR2(30)
);

-- 고객테이블 컬럼에 주석 달기
COMMENT ON COLUMN CUSTOMERS.CUSTOMER_ID IS '고객ID';
COMMENT ON COLUMN CUSTOMERS.NAME IS '이름';
COMMENT ON COLUMN CUSTOMERS.GENDER IS '성별';
COMMENT ON COLUMN CUSTOMERS.ADDRESS IS '주소';
COMMENT ON COLUMN CUSTOMERS.PHONE IS '전화번호';

-- 주문정보테이블 생성
CREATE TABLE ORDERS (
 ORDERS_ID NUMBER PRIMARY KEY,
 ORDERS_DATE DATE DEFAULT SYSDATE,
 STATUS CHAR(1) DEFAULT 'N' CHECK (STATUS IN ('Y','N') ),
 CUSTOMER_ID NUMBER CONSTRAINT CUSTOMER_ID_FK REFERENCES CUSTOMERS (CUSTOMER_ID) ON DELETE CASCADE
 
);

-- 주문정보 테이블에 주석달기
COMMENT ON COLUMN ORDERS.ORDERS_ID IS '주문번호';
COMMENT ON COLUMN ORDERS.ORDERS_DATE IS '주문일';
COMMENT ON COLUMN ORDERS.STATUS IS '처리상태';
COMMENT ON COLUMN ORDERS.CUSTOMER_ID IS '고객ID';

-- 주문상세 정보 테이블 생성
CREATE TABLE ORDER_DETAILS(
 ORDER_DETAIL_ID NUMBER PRIMARY KEY,
 ORDER_ID NUMBER CONSTRAINT ORDT_ID_FK REFERENCES ORDERS (ORDERS_ID) ON DELETE CASCADE,
 PRODUCT_ID NUMBER CONSTRAINT ORDT_PID_FK REFERENCES PRODUCTS (PRODUCTS_ID) ON DELETE SET NULL,
 QUANTITY NUMBER,
 PRICE_PER_UNIT NUMBER
 
 );

-- 주문상세 정보테이블 컬럼에 주석달기
COMMENT ON COLUMN ORDER_DETAILS.ORDER_DETAIL_ID IS '주문상세';
COMMENT ON COLUMN ORDER_DETAILS. ORDER_ID IS '주문번호';
COMMENT ON COLUMN ORDER_DETAILS.PRODUCT_ID IS '상품코드';
COMMENT ON COLUMN ORDER_DETAILS.QUANTITY IS '수량';
COMMENT ON COLUMN ORDER_DETAILS.PRICE_PER_UNIT IS ' 가격';
-----------------------휴 ... 테이블 컬럼에 주석달기 완료 요기까뤼 -------------------------------------

INSERT INTO CATEGORIES VALUES (1,'스마트폰');
INSERT INTO CATEGORIES VALUES (2,'TV');
INSERT INTO CATEGORIES VALUES (3,'Gaming');

SELECT * FROM CATEGORIES;

INSERT INTO PRODUCTS VALUES (101,'Apple IPhone 12',1,1500000,30);
INSERT INTO PRODUCTS VALUES (102,'Samsung Galaxy S24',1,1800000,50);
INSERT INTO PRODUCTS VALUES (201,'LG OLED TB',2,3600000,10);
INSERT INTO PRODUCTS VALUES (301,'Sony PlayStation5',3,700000,15);

SELECT * FROM PRODUCTS p ;

INSERT INTO CUSTOMERS VALUES (1,'홍길동','남','서울시 성동구 왕십리','010-1111-2222');
INSERT INTO CUSTOMERS VALUES (2,'유관순','여','서울시 종로구 안국동','010-3333-1111');

SELECT * FROM CUSTOMERS;

INSERT INTO ORDERS VALUES(576,'2024-02-29','N',1);
INSERT INTO ORDERS VALUES(978,'2024-03-11','Y',2);
INSERT INTO ORDERS VALUES(777,'2024-03-11','N',2);
INSERT INTO ORDERS VALUES(134,'2024-12-25','Y',1);
INSERT INTO ORDERS VALUES(499,'2024-01-03','Y',1);

SELECT * FROM ORDERS;

INSERT INTO ORDER_DETAILS VALUES(111,576,101,1,1500000);
INSERT INTO ORDER_DETAILS VALUES(222,978,201,2,3600000);
INSERT INTO ORDER_DETAILS VALUES(333,978,102,1,1800000);
INSERT INTO ORDER_DETAILS VALUES(444,777,301,5,700000);
INSERT INTO ORDER_DETAILS VALUES(555,134,102,1,1800000);
INSERT INTO ORDER_DETAILS VALUES(666,499,201,3,3600000);

SELECT * FROM ORDER_DETAILS ;

----------------------------데이터 삽입 완료 -----------------------

/*1. 쇼핑몰 관리자가 주문은 받았으나 , 아직 처리가 안된 주문을 처리하려고 한다.
 * 현재 주문 내역중 아직 처리되지 않은 주문을 조회하시오
 * 고객명, 주문일, 처리상태*/
SELECT * FROM ORDER_DETAILS;
SELECT * FROM ORDERS;
SELECT * FROM CUSTOMERS;
SELECT * FROM PRODUCTS p;

SELECT NAME "고객명",ORDERS_DATE"주문일",STATUS"처리상태"
FROM CUSTOMERS
JOIN ORDERS USING (CUSTOMER_ID)
JOIN ORDER_DETAILS ON (ORDERS_ID = ORDER_ID)
WHERE STATUS = 'N';

/*2.홍길동 고객이 이번년도에 본인이 주문한 전체 내역을 조회하고자 한다. 
 * 주문번호, 주문날짜 , 처리상태를 조회하시오*/

SELECT ORDERS_ID"주문번호" , ORDERS_DATE"주문날짜" , STATUS"처리상태"
FROM CUSTOMERS
JOIN ORDERS USING (CUSTOMER_ID)
JOIN ORDER_DETAILS ON (ORDERS_ID = ORDER_ID)
WHERE NAME = '홍길동'
AND ORDERS_DATE BETWEEN '2024-01-01' AND '2024-12-31'
AND STATUS = 'N';

/*3.유관순 고객이 지금껏 주문한 상품의 수량 별금액을 조회하려고한다. 주문번호
 * 상품명,수량,개별금액,주문별금액을 조회하시오
 */ 
 
SELECT ORDERS_ID"주문번호",PRODUCTS_NAME"상품명",QUANTITY"수량",PRICE"개별금액",QUANTITY*PRICE "주문별금액합계"
FROM CUSTOMERS
JOIN ORDERS USING (CUSTOMER_ID)
JOIN ORDER_DETAILS ON (ORDERS_ID = ORDER_ID)
JOIN PRODUCTS ON(PRODUCT_ID=PRODUCTS_ID)
WHERE NAME = '유관순'
ORDER BY 주문번호;

COMMIT;
